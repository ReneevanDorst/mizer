% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_methods.R
\name{getFeedingLevel}
\alias{getFeedingLevel}
\title{Get feeding level}
\usage{
getFeedingLevel(object, n, n_pp, n_other, encounter, time_range, drop = FALSE)
}
\arguments{
\item{encounter}{The encounter rate matrix (optional) of dimension no.
species x no. size bins. If not passed in, it is calculated internally
using \code{\link{getEncounter}}. Only used if \code{object}
argument is of type \code{MizerParams}.}
}
\value{
If a \code{MizerParams} object is passed in, the function returns a two
  dimensional array (predator species x predator size) based on the
  abundances also passed in.
  If a \code{MizerSim} object is passed in, the function returns a three
  dimensional array (time step x predator species x predator size) with the
  feeding level calculated at every time step in the simulation.
  If \code{drop = TRUE} then the dimension of length 1 will be removed from
  the returned array.
}
\description{
Calculates the feeding level \eqn{f_i(w)}. The feeding level is the
proportion of its maximum intake rate at which the predator is actually
taking in fish. It is calculated from the encounter rate \eqn{E_i} and the
maximum intake rate \eqn{h_i(w)} as
\deqn{f_i(w) = \frac{E_i(w)}{E_i(w)+h_i(w)}.}{E_i(w)/(E_i(w)+h_i(w)).}
The encounter rate \eqn{E_i} is passed as an argument or calculated with
\code{\link{getEncounter}}. The maximum intake rate \eqn{h_i(w)} is
taken from the \code{params} object, and is set with 
\code{\link{setIntakeMax}}.
As a consequence of the above expression for the feeding level,
\eqn{1-f_i(w)} is the proportion of the food available to it that the
predator actually consumes.
}
\details{
The feeding level is used in \code{\link{getEReproAndGrowth}} and in
\code{\link{getPredRate}}.
}
\examples{
\dontrun{
data(NS_species_params_gears)
data(inter)
params <- newMultispeciesParams(NS_species_params_gears, inter)
# With constant fishing effort for all gears for 20 time steps
sim <- project(params, t_max = 20, effort = 0.5)
# Get the feeding level at one time step
n <- sim@n[21,,]
n_pp <- sim@n_pp[21,]
fl <- getFeedingLevel(params,n,n_pp)
# Get the feeding level at all saved time steps
fl <- getFeedingLevel(sim)
# Get the feeding level for time 15 - 20
fl <- getFeedingLevel(sim, time_range = c(15,20))
}
}
\seealso{
Other rate functions: 
\code{\link{getEGrowth}()},
\code{\link{getEReproAndGrowth}()},
\code{\link{getERepro}()},
\code{\link{getEncounter}()},
\code{\link{getFMortGear}()},
\code{\link{getFMort}()},
\code{\link{getMort}()},
\code{\link{getPlanktonMort}()},
\code{\link{getPredMort}()},
\code{\link{getPredRate}()},
\code{\link{getRDD}()},
\code{\link{getRDI}()},
\code{\link{getRates}()},
\code{\link{getStarvMort}()}
}
\concept{rate functions}
