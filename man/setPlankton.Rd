% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MizerParams-class.R
\name{setPlankton}
\alias{setPlankton}
\alias{getPlanktonRate}
\alias{getPlanktonCapacity}
\alias{getPlanktonParams}
\alias{getPlanktonDynamics}
\title{Set up plankton}
\usage{
setPlankton(
  params,
  r_plankton = NULL,
  K_plankton = NULL,
  r_pp = params@plankton_params[["r_pp"]],
  kappa = params@plankton_params[["kappa"]],
  lambda = params@plankton_params[["lambda"]],
  n = params@plankton_params[["n"]],
  w_pp_cutoff = params@plankton_params[["w_pp_cutoff"]],
  plankton_dynamics = NULL,
  ...
)

getPlanktonRate(params)

getPlanktonCapacity(params)

getPlanktonParams(params)

getPlanktonDynamics(params)
}
\arguments{
\item{params}{A MizerParams object}

\item{r_plankton}{Optional. Vector of plankton intrinsic birth rates}

\item{K_plankton}{Optional. Vector of plankton intrinsic carrying capacity}

\item{r_pp}{Coefficient of the intrinsic plankton birth rate}

\item{kappa}{Coefficient of the intrinsic plankton carrying capacity}

\item{lambda}{Scaling exponent of the intrinsic plankton carrying capacity}

\item{n}{Allometric growth exponent for plankton}

\item{w_pp_cutoff}{The upper cut off size of the plankton spectrum. 
Default is 10 g.}

\item{plankton_dynamics}{Function that determines plankton dynamics by
calculating the plankton spectrum at the next time step from the current
state.}

\item{...}{Unused}
}
\value{
A MizerParams object with updated plankton parameters. Because of the
  way the R language works, `setPlankton()` does not make the changes to the
  params object that you pass to it but instead returns a new params object.
  So to affect the change you call the function in the form
  `params <- setPlankton(params, ...)`.
}
\description{
Sets the intrinsic plankton growth rate and the intrinsic plankton carrying
capacity as well as the name of the function used to simulate the plankton
dynamics
}
\section{Setting plankton dynamics}{

By default, mizer uses a semichemostat model to describe the plankton
dynamics in each size class independently. This semichemostat dynamics is implemented
by the function \code{\link{plankton_semichemostat}}. You can change the
plankton dynamics by writing your own function, modelled on
\code{\link{plankton_semichemostat}}, and then passing the name of your
function in the \code{plankton_dynamics} argument.

The \code{r_plankton} argument is a vector specifying the intrinsic plankton
growth rate for each size class. If it is not supplied, then the intrinsic growth
rate \eqn{r_p(w)} at size \eqn{w}
is set to \deqn{r_p(w) = r_p\, w^{n-1}.}{r_p(w) = r_p w^{n-1}}
The values of \eqn{r_p} and \eqn{n} are taken from the \code{r_plankton}
and \code{n} arguments.

The \code{K_plankton} argument is a vector specifying the intrinsic plankton
carrying capacity for each size class. If it is not supplied, then the 
intrinsic carrying capacity \eqn{c_p(w)} at size \eqn{w}
is set to \deqn{c_p(w) = \kappa\, w^{-\lambda}}{c_p(w) = \kappa w^{-\lambda}}
for all \eqn{w} less than \code{w_pp_cutoff} and zero for larger sizes.
The values of \eqn{\kappa} and \eqn{\lambda} are taken from the \code{kappa}
and \code{lambda} arguments.
}

\seealso{
Other functions for setting parameters: 
\code{\link{setExtMort}()},
\code{\link{setFishing}()},
\code{\link{setInitialValues}()},
\code{\link{setInteraction}()},
\code{\link{setMaxIntakeRate}()},
\code{\link{setMetabolicRate}()},
\code{\link{setParams}()},
\code{\link{setPredKernel}()},
\code{\link{setReproduction}()},
\code{\link{setSearchVolume}()}
}
\concept{functions for setting parameters}
